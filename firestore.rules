rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // User profiles
    match /users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Performances
    match /performances/{performanceId} {
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
      
      // Rehearsals
      match /rehearsals/{rehearsalId} {
        allow read: if request.auth != null && get(/databases/$(database)/documents/performances/$(performanceId)).data.userId == request.auth.uid;
        allow create: if request.auth != null && get(/databases/$(database)/documents/performances/$(performanceId)).data.userId == request.auth.uid;
        allow update, delete: if request.auth != null && get(/databases/$(database)/documents/performances/$(performanceId)).data.userId == request.auth.uid;
        
        // Recordings
        match /recordings/{recordingId} {
          allow read: if request.auth != null && get(/databases/$(database)/documents/performances/$(performanceId)).data.userId == request.auth.uid;
          allow create: if request.auth != null && get(/databases/$(database)/documents/performances/$(performanceId)).data.userId == request.auth.uid;
          allow update, delete: if request.auth != null && get(/databases/$(database)/documents/performances/$(performanceId)).data.userId == request.auth.uid;
        }
      }
    }
  }
}